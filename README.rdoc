= \youtube_dlhelper

home :: https://github.com/saigkill/youtube_dlhelper
license :: {<img src="http://img.shields.io/:license-gpl3-blue.svg" alt="license">}[http://www.gnu.org/licenses/gpl-3.0.html]
last public version :: {<img src="https://badge.fury.io/rb/youtube_dlhelper.png" alt="version">}[http://rubygems.org/gems/youtube_dlhelper]
continuous integration :: {<img src="https://scrutinizer-ci.com/g/saigkill/youtube_dlhelper/badges/build.png?b=master" alt="integration state">}[https://scrutinizer-ci.com/g/saigkill/youtube_dlhelper/]
continuous integration :: {<img src="https://secure.travis-ci.org/saigkill/youtube_dlhelper.png?branch=master" alt="integration state">}[https://travis-ci.org/saigkill/youtube_dlhelper]
continuous integration :: {<img src="http://saigkill.ddns.net:8111/app/rest/builds/buildType:%28id:YoutubeDlhelper_Build%29/statusIcon" />}[http://saigkill.ddns.net:8111]
test coverage :: {<img src="https://coveralls.io/repos/saigkill/youtube_dlhelper/badge.png?branch=master" alt="Coverage Status" />}[https://coveralls.io/r/saigkill/youtube_dlhelper?branch=master]
code quality :: {<img src="https://codeclimate.com/github/saigkill/youtube_dlhelper.png" />}[https://codeclimate.com/github/saigkill/youtube_dlhelper]
code quality :: {<img src="https://scrutinizer-ci.com/g/saigkill/youtube_dlhelper/badges/quality-score.png?b=master" />}[https://scrutinizer-ci.com/g/saigkill/youtube_dlhelper]
dependency check :: {<img src="https://gemnasium.com/saigkill/youtube_dlhelper.png" alt="Dependency Status" />}[https://gemnasium.com/saigkill/youtube_dlhelper]
still maintained? :: {<img src="http://stillmaintained.com/saigkill/youtube_dlhelper.png" alt="Maintaining Status" /}[http://stillmaintained.com/saigkill/youtube_dlhelper]
documentation quality :: {<img src="http://inch-ci.org/github/saigkill/youtube_dlhelper.svg?branch=master" />}[http://inch-ci.org/github/saigkill/youtube_dlhelper]
code documentation :: http://rubydoc.info/github/saigkill/youtube_dlhelper
bugs :: http://saigkill.ddns.net:8112/dashboard
review code :: http://saigkill.ddns.net:8080/youtube_dlhelper/view
authors blog :: http://saigkill.github.io
authors doings :: {<iframe src="http://githubbadge.appspot.com/saigkill?s=1" style="border: 0;height: 142px;width: 200px;overflow: hidden;" frameBorder="0" />}[https://github.com/saigkill]
ohloh :: https://www.ohloh.net/p/youtube_dlhelper
openhatch :: http://openhatch.org/projects/youtube_dlhelper
donations :: {<img src="https://pledgie.com/campaigns/29423.png?skin_name=chrome" />}[https://pledgie.com/campaigns/29423] Donations are welcome :-)

== Description

The youtube_dlhelper is a short tool for download and manage the downloaded files. You are running the program inside the command line with a Youtube URL. Then it aska for a
group name or interpreters name. Now it creates a Subfolder inside your Musicdirectory. Then it makes a MP3 from the downloaded file and moves it to the folder.

== Installation

The installation is very easy.

    gem install youtube_dlhelper

== Hard dependencies
Just a preinstalled ffmpeg.

== Soft dependencies
I'm using:

* highline
* dir
* fileutils2
* parseconfig
* viddl-rb
* streamio-ffmpeg
* rainbow

Bundler should solve the dependencies by itself.

== Configuration
There are two important settings for you to set. Look into the lib/youtube_dlhelper.conf.

=== musicdir
The musicdir points to your place (without /home/username): musicdir = 'Musik'.

=== ogg_file_accept
In many cases Youtube gives out a *.mp4 file and then viddl extracts the audio to a *.m4a file. The ripper transcodes them to OGG or MP3. In some cases
Yotube delivers a *.webm file and the extracted audio comes into a .ogg file. If you accepts that, youtube_dlhelper exits. If you change the setting from true to false youtube_dlhelper starts the ripper to transcode it to MP3.

== Usage

    bin/youtube_dlhelper YoutubeURL


Example:

    youtube_dlhelper http://www.youtube.com/watch?v=aHjpOzsQ9YI
    If a http:// URL doesn't work use http:// instead

Before running the program you have to open the youtube_dlhelper.conf and change the settings (See Configuration).

== Feature Requests & Bug Reports
You can file Requests and Reports on the Github Repository: https://github.com/saigkill/youtube_dlhelper/issues

== Contributing

1. Fork it
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Commit your changes (`git commit -am 'Add some feature'`)
4. Push to the branch (`git push origin my-new-feature`)
5. Create new Pull Request
